name: Build macOS ARM64

on:
  workflow_call:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos-arm64:
    name: Build macOS ARM64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust and targets
        run: |
          rustup default stable
          rustup target add aarch64-apple-darwin
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: macos-arm64-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-arm64-cargo-
      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: macos-arm64-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-arm64-target-
      - name: Install cross-compilation tools
        run: |
          # For macOS cross-compilation, we'll just do cargo check which doesn't need the full toolchain
          echo "Cross-compiling to macOS ARM64 target"
      - name: Check build for target
        run: |
          cargo check --target aarch64-apple-darwin --verbose 